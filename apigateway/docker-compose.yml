version: "3.8"

volumes:
  rabbitmq_data:
  kafka_data:


networks:
  default:
    name: kong_kong-net

services:
  zookeeper: 
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports: 
      - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   ports: 
  #     - "9092:9092"
  #   hostname: kafka
  #   environment: 
  #     #KAFKA_ADVERTISED_HOST_NAME: localhost 
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports: 
      - "9092:9092"
    environment: 
      KAFKA_ADVERTISED_HOST_NAME: kafka 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLCIATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1347375956


    
  
####################################
# RabbitMQ: The messaging broker   
####################################
  rabbitmq: 
    image: rabbitmq:3-management 
    hostname: esd-rabbit 
    restart: always 
    ports: 
      - "5672:5672" 
      - "15672:15672" 
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq 

  
  activity:
    build: ../activity
    image: activity:hosehtrades
    ports:
      - '5003:5003'
    restart: always
    environment: 
      PYTHONUNBUFFERED: 1
    depends_on:
      - kafka
      - getAvailableTrades
      - userLogin
      - getItems
      - listTrade


  item:
    build: ../item
    image: item:hosehtrades
    ports:
      - '8088:8088'
    restart: always

  authentication:
    build: ../authentication
    image: authentication:hosehtrades
    restart: always
    ports:
      - '8082:8082'

  user:
    build: ../user
    image: user:hosehtrades
    restart: always
    ports:
      - '8081:8081'

  game:
    build: ../game
    image: game:hosehtrades
    restart: always
    ports:
      - '8083:8083'

  trade:
    build: ../trade
    image: trade:hosehtrades
    restart: always
    ports:
      - '8084:8084'

  error:
    build: ../error
    image: error:hosehtrades
    restart: always
    ports:
      - '5004:5004'
    environment: 
      PYTHONUNBUFFERED: 1
    depends_on:
      - kafka
      - getAvailableTrades
      - userLogin
      - getItems
      - listTrade

  email:
    build: ../email
    image: email:hosehtrades
    restart: always 
    depends_on:
      - rabbitmq
      - listTrade
    ports:
      - '5005:5005'
    environment: 
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
      PYTHONUNBUFFERED: 1
      
    
    




    



  userLogin:
    build: ../userlogin
    image: userlogin:hosehtrades

    restart: always
    ports:
      - '8090:8090'
    depends_on: 
      - kafka

  getAvailableTrades:
    build: ../getAvailableTrades
    image: getavailabletrades:hosehtrades
    restart: always
    ports:
      - '8093:8093'
    depends_on: 
      - kafka

  getItems:
    build: ../getitems
    image: getitems:hosehtrades
    restart: always
    ports:
      - '8094:8094'
    depends_on: 
      - kafka


  listTrade:
    build: ../listtrade
    image: listtrade:hosehtrades
    restart: always
    ports:
      - '8092:8092'
    depends_on: 
      - kafka
    

